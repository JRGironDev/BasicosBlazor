@page "/"
@using BasicosBlazor.Client.Component.Carrera
@using BasicosBlazor.Library

<PageTitle>Carrera</PageTitle>

<h1>Pagina Carrera</h1>

<FormCarrera />

@if (listacarrera is null)
{
    <p>Cargando...</p>
}
else
{
    <table class="table table-striped">
    <thead>
        <tr>
            <th>Id Carrera</th>
            <th>Nombre</th>
            <th>Descripcion</th>
        </tr>
    </thead>
    <tbody>
        @foreach (CarreraCLS carrera in listacarrera)
            {
                <tr>
                    <td>@carrera.idcarrera</td>
                    <td>@carrera.nombrecarrera</td>
                    <td>@carrera.descripcioncarrera</td>
                    <td>
                        <button class="btn btn-danger" @onclick="(()=> eliminar(carrera.idcarrera))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}   

@code {
    //public CarreraCLS oCarreraCLS { get; set; } =  new CarreraCLS();
    public List<CarreraCLS> listacarrera { get; set; }

    protected override async Task OnInitializedAsync()
    {
        listacarrera = new List<CarreraCLS>();

        listacarrera.Add(new CarreraCLS
            {
                idcarrera = 1,
                nombrecarrera = "Ingenieria de Sistemas",
                descripcioncarrera = "Desc 1"
            });
        listacarrera.Add(new CarreraCLS
            {
                idcarrera = 2,
                nombrecarrera = "Ingenieria de Software",
                descripcioncarrera = "Desc 2"
            });
        listacarrera.Add(new CarreraCLS
            {
                idcarrera = 3,
                nombrecarrera = "Ingenieria de Redes",
                descripcioncarrera = "Desc 3"
            });

        await Task.CompletedTask;
    }

    public async Task guardar()
    {
        //listacarrera.Add(oCarreraCLS);
        //oCarreraCLS = new CarreraCLS();

        await Task.CompletedTask;
    }

    public async Task eliminar(int idcarrera)
    {
        var data = listacarrera.Where(p => p.idcarrera != idcarrera).ToList();

        listacarrera = data;

        await Task.CompletedTask;
    }
}